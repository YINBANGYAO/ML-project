# 正确的 docker-compose.yml 结构
services:
  # 主应用服务
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: house-price-app
    volumes:
      - .:/app
      - ./data:/app/data
      - ./models:/app/models
      - ./mlruns:/app/mlruns
    working_dir: /app
    environment:
      - PYTHONPATH=/app
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      mlflow:
        condition: service_started
    networks:
      - ml-network
    profiles: ["dev"]

  # MLflow 跟踪服务器
  mlflow:
    build:
      context: .
      dockerfile: docker/Dockerfile.mlflow
    container_name: mlflow-server
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
      - ./mlartifacts:/mlartifacts
    environment:
      - MLFLOW_BACKEND_STORE_URI=sqlite:///mlruns/mlruns.db
      - MLFLOW_ARTIFACT_ROOT=file:///mlartifacts
    networks:
      - ml-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles: ["dev", "prod"]

  # Jupyter Notebook 服务
  jupyter:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: jupyter-notebook
    ports:
      - "8888:8888"
    volumes:
      - .:/app
      - ./data:/app/data
      - ./notebooks:/app/notebooks
    working_dir: /app
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''
    depends_on:
      mlflow:
        condition: service_started
    networks:
      - ml-network
    profiles: ["dev"]

  # 生产环境 API 服务
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: house-price-api
    ports:
      - "8000:8000"
    volumes:
      - ./models:/app/models
    working_dir: /app
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - ENVIRONMENT=production
    command: ["python", "scripts/api_server.py"]
    depends_on:
      mlflow:
        condition: service_started
    networks:
      - ml-network
    profiles: ["prod"]

networks:
  ml-network:
    driver: bridge

volumes:
  mlruns:
  mlartifacts:
  models: